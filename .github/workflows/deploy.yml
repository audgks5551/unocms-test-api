name: Deploy to EKS

on:
  push:
    branches:
      - main

permissions: write-all

jobs:
  tag:
    outputs:
      tag_name: ${{ steps.tag_version.outputs.new_tag }}
      release_name: Release ${{ steps.tag_version.outputs.new_tag }}
      body: ${{ steps.tag_version.outputs.changelog }}
    name: 태그 생성
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
  docker:
    name: 도커 이미지 빌드와 푸시
    runs-on: ubuntu-latest
    needs: tag
    steps:
      - uses: actions/checkout@v3
      - name: Docker Buildx 설치
        uses: docker/setup-buildx-action@v2
      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: memocode-dev
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 빌드 앤 푸시
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile
          context: .
          push: true
          tags: |
            ghcr.io/audgks5551/test-api:${{ needs.tag.outputs.tag_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  release:
    name: release 생성
    runs-on: ubuntu-latest
    needs: [ docker, tag ]
    steps:
      - uses: actions/checkout@v3
      - name: Create a GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.tag.outputs.tag_name }}
          release_name: ${{ needs.tag.outputs.release_name }}
          body: ${{ needs.tag.outputs.body }}
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.EKS_ADMIN_ROLE_ARN }}
          role-duration-seconds: 1200
          role-session-name: kubernetes-admin-role
          role-skip-session-tagging: true

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Update kubeconfig
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}
      - name: Deploy to EKS
        run: |
          kubectl get all -A